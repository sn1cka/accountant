import 'converters/datetime_converter.dart';

CREATE TABLE income_categories (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  title TEXT NOT NULL CHECK(length(title) BETWEEN 1 AND 30),
  icon_index INTEGER NOT NULL,
  color_index INTEGER NOT NULL
);

CREATE TABLE income_subcategories (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  title TEXT NOT NULL CHECK(length(title) BETWEEN 1 AND 30),
  income_category_id INTEGER NOT NULL REFERENCES income_categories(id)
);

CREATE TABLE accounts (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  amount REAL NOT NULL,
  title TEXT NOT NULL CHECK(length(title) BETWEEN 1 AND 30),
  icon_index INTEGER NOT NULL,
  color_index INTEGER NOT NULL
);

CREATE TABLE expense_categories (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  title TEXT NOT NULL CHECK(length(title) BETWEEN 1 AND 30),
  icon_index INTEGER NOT NULL,
  color_index INTEGER NOT NULL
);

CREATE TABLE expense_subcategories (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  title TEXT NOT NULL CHECK(length(title) BETWEEN 1 AND 30),
  expense_category_id INTEGER NOT NULL REFERENCES expense_categories(id)
);

CREATE TABLE incomes (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  amount REAL NOT NULL,
  income_category_id INTEGER NOT NULL REFERENCES income_categories(id),
  income_subcategory_id INTEGER REFERENCES income_subcategories(id),
  accounts_id INTEGER NOT NULL REFERENCES accounts(id),
  date INTEGER NOT NULL MAPPED BY `const DateTimeConverter()`,
  description TEXT CHECK(length(description) <= 140)
);

CREATE TABLE expenses (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  amount REAL NOT NULL,
  accounts_id INTEGER NOT NULL REFERENCES accounts(id),
  expense_category_id INTEGER NOT NULL REFERENCES expense_categories(id),
  expense_subcategory_id INTEGER REFERENCES expense_subcategories(id),
  date INTEGER NOT NULL MAPPED BY `const DateTimeConverter()`,
  description TEXT CHECK(length(description) <= 140)
);
